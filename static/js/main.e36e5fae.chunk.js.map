{"version":3,"sources":["imgs/car-round_available-3.svg","imgs/car-round_unavailable-3.svg","imgs/settings-white.svg","components/Map/PopupElement/PopupElement.tsx","contexts/ObjectsContext.tsx","api/api.tsx","components/Map/Icons/Icons.tsx","components/Map/Markers/Markers.tsx","components/Map/MapElement.tsx","components/Switch/Switch.tsx","components/Toolbar/Filters/SwitchFilter/SwitchFilter.tsx","components/Toolbar/Filters/RangeFilter/RangeFilter.tsx","components/Toolbar/Toolbar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","PopupElement","activeObject","address","batteryLevelPct","color","location","name","platesNumber","rangeKm","sideNumber","setActiveObject","Popup","position","latitude","longitude","onClose","className","indexOf","style","backgroundColor","length","ObjectContext","createContext","ObjectContextProvider","children","useState","objects","setObjects","useEffect","a","async","fetch","res","json","ok","Error","status","updatedObjects","_","map","object","pickedProperties","pick","hiddenByStatus","hiddenByBatteryLevel","alert","getDataFromApi","Provider","value","filterByAvailabilityStatus","filterByBatteryLevel","batteryLevel","availableIcon","L","icon","iconUrl","availableImg","iconSize","iconAnchor","unavailableIcon","unavailableImg","Markers","useContext","Marker","key","id","onClick","MapElement","Map","center","zoom","maxZoom","TileLayer","url","attribution","maxClusterRadius","Switch","type","isChecked","setCheck","checked","onChange","SwitchFilter","title","src","alt","RangeFilter","setBatteryLevel","step","min","max","e","target","handleRangeChange","Toolbar","isOpen","setIsOpen","settingsImg","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e36e5fae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/car-round_available-3.c0503a41.svg\";","module.exports = __webpack_public_path__ + \"static/media/car-round_unavailable-3.b7314b99.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings-white.e3c0ae30.svg\";","import React from \"react\";\r\nimport { Popup } from \"react-leaflet\";\r\nimport { PopupElementProps } from \"../../../interfaces\";\r\nimport \"./PopupElement.scss\";\r\n\r\nconst PopupElement: React.FC<PopupElementProps> = ({\r\n  activeObject: {\r\n    address,\r\n    batteryLevelPct,\r\n    color,\r\n    location,\r\n    name,\r\n    platesNumber,\r\n    rangeKm,\r\n    sideNumber\r\n  },\r\n  setActiveObject\r\n}) => {\r\n  return (\r\n    <Popup\r\n      position={[location.latitude, location.longitude]}\r\n      onClose={() => {\r\n        setActiveObject(null);\r\n      }}\r\n    >\r\n      <div className=\"popup\">\r\n        <h2 className=\"popup__name\">{name}</h2>\r\n        {platesNumber.indexOf(\" \") < 0 && (\r\n          <span className=\"popup__plates\">{platesNumber}</span>\r\n        )}\r\n        {color && (\r\n          <p className=\"popup__color\">\r\n            Kolor:\r\n            <span style={{ backgroundColor: color }}></span>\r\n          </p>\r\n        )}\r\n        <p className=\"popup__sidenumber\">\r\n          {sideNumber.length === 3 && `Numer boczny: ${sideNumber}`}\r\n        </p>\r\n        <p className=\"popup__range\">{`Zasięg: ${rangeKm} km`}</p>\r\n        <p className=\"popup__battery\">{`Poziom baterii: ${batteryLevelPct} %`}</p>\r\n        {address && <p className=\"popup__adress\">{`Adres: ${address}`}</p>}\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopupElement;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport { ICarObject, IObjectContextTheme } from \"../interfaces\";\r\nimport _ from \"lodash\";\r\nimport { URL } from \"../api/api\";\r\n\r\nexport const ObjectContext = createContext<Partial<IObjectContextTheme>>({});\r\n\r\nconst ObjectContextProvider: React.FC = ({ children }) => {\r\n  const [objects, setObjects] = useState<[] | ICarObject[]>([]);\r\n\r\n  /*\r\n   STATUS(SWITCH TYPE): AVAILABLE/UNAVAILABLE\r\n   VALUE(SWITCH STATE): TRUE/FALSE\r\n   */\r\n  const filterByAvailabilityStatus = (status: string, value: boolean) => {\r\n    const updatedObjects = _.map(objects, (object: ICarObject) =>\r\n      object.status === status\r\n        ? { ...object, hiddenByStatus: value }\r\n        : { ...object }\r\n    );\r\n    setObjects([...updatedObjects]);\r\n  };\r\n\r\n  const filterByBatteryLevel = (batteryLevel: number) => {\r\n    const updatedObjects = _.map(objects, (object: ICarObject) =>\r\n      object.batteryLevelPct < batteryLevel\r\n        ? { ...object, hiddenByBatteryLevel: true }\r\n        : { ...object, hiddenByBatteryLevel: false }\r\n    );\r\n    setObjects([...updatedObjects]);\r\n  };\r\n\r\n  const getDataFromApi = async () => {\r\n    try {\r\n      const res = await fetch(URL);\r\n      const { objects } = await res.json();\r\n      if (!res.ok || !objects.length) {\r\n        throw new Error(`Kod błędu ${res.status}`);\r\n      }\r\n      const updatedObjects = _.map(objects, (object: ICarObject) => {\r\n        const pickedProperties = _.pick(object, [\r\n          \"address\",\r\n          \"batteryLevelPct\",\r\n          \"color\",\r\n          \"id\",\r\n          \"location\",\r\n          \"name\",\r\n          \"platesNumber\",\r\n          \"rangeKm\",\r\n          \"sideNumber\",\r\n          \"status\"\r\n        ]);\r\n        return {\r\n          ...pickedProperties,\r\n          hiddenByStatus: false,\r\n          hiddenByBatteryLevel: false\r\n        };\r\n      });\r\n      setObjects(updatedObjects);\r\n    } catch (error) {\r\n      alert(`Nie można pobrać danych o położeniu obiektów. ${error}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataFromApi();\r\n  }, []);\r\n\r\n  return (\r\n    <ObjectContext.Provider\r\n      value={{\r\n        objects,\r\n        setObjects,\r\n        filterByAvailabilityStatus,\r\n        filterByBatteryLevel\r\n      }}\r\n    >\r\n      {children}\r\n    </ObjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ObjectContextProvider;\r\n","export const URL =\r\n  \"https://dev.vozilla.pl/api-client-portal/map?objectType=VEHICLE\";\r\n","import L from \"leaflet\";\r\nimport availableImg from \"../../../imgs/car-round_available-3.svg\";\r\nimport unavailableImg from \"../../../imgs/car-round_unavailable-3.svg\";\r\n\r\nexport const availableIcon = L.icon({\r\n  iconUrl: availableImg,\r\n  iconSize: [40, 40],\r\n  iconAnchor: [20, 0]\r\n});\r\n\r\nexport const unavailableIcon = L.icon({\r\n  iconUrl: unavailableImg,\r\n  iconSize: [40, 40],\r\n  iconAnchor: [20, 0]\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Marker } from \"react-leaflet\";\r\nimport { ObjectContext } from \"../../../contexts/ObjectsContext\";\r\nimport { availableIcon, unavailableIcon } from \"../Icons/Icons\";\r\nimport { ICarObject, MarkersProps } from \"../../../interfaces\";\r\n\r\nconst Markers: React.FC<MarkersProps> = ({ setActiveObject }) => {\r\n  const { objects } = useContext(ObjectContext);\r\n\r\n  const renderObjectsMarkers = () =>\r\n    _.map(\r\n      objects,\r\n      (object: ICarObject) =>\r\n        !object.hiddenByStatus &&\r\n        !object.hiddenByBatteryLevel && (\r\n          <Marker\r\n            key={object.id}\r\n            position={[object.location.latitude, object.location.longitude]}\r\n            onClick={() => {\r\n              setActiveObject(object);\r\n            }}\r\n            icon={\r\n              object.status === \"AVAILABLE\" ? availableIcon : unavailableIcon\r\n            }\r\n          />\r\n        )\r\n    );\r\n\r\n  return <>{renderObjectsMarkers()}</>;\r\n};\r\n\r\nexport default Markers;\r\n","import React, { useState } from \"react\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport { ICarObject } from \"../../interfaces\";\r\nimport PopupElement from \"./PopupElement/PopupElement\";\r\nimport Markers from \"./Markers/Markers\";\r\nimport MarkerClusterGroup from \"react-leaflet-markercluster\";\r\nimport \"./Map.scss\";\r\n\r\nconst MapElement: React.FC = () => {\r\n  const [activeObject, setActiveObject] = useState<null | ICarObject>(null);\r\n\r\n  return (\r\n    <Map center={[52.187511, 20.930528]} zoom={10} maxZoom={19}>\r\n      <TileLayer\r\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n      />\r\n\r\n      <MarkerClusterGroup maxClusterRadius={30}>\r\n        <Markers setActiveObject={setActiveObject} />\r\n      </MarkerClusterGroup>\r\n\r\n      {activeObject && (\r\n        <PopupElement\r\n          activeObject={activeObject}\r\n          setActiveObject={setActiveObject}\r\n        />\r\n      )}\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default MapElement;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./Switch.scss\";\r\nimport { ObjectContext } from \"../../contexts/ObjectsContext\";\r\nimport { SwitchProps } from \"../../interfaces\";\r\n\r\nconst Switch: React.FC<SwitchProps> = ({ type }) => {\r\n  const [isChecked, setCheck] = useState<boolean>(true);\r\n  const { filterByAvailabilityStatus } = useContext(ObjectContext);\r\n\r\n  const handleInputChange = () => {\r\n    setCheck(isChecked => !isChecked);\r\n    filterByAvailabilityStatus!(type, isChecked);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className=\"switch-input\"\r\n      type=\"checkbox\"\r\n      checked={isChecked}\r\n      onChange={() => handleInputChange()}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","import React from \"react\";\r\nimport Switch from \"../../../Switch/Switch\";\r\nimport \"./SwitchFilter.scss\";\r\nimport { SwitchFilterProps } from \"../../../../interfaces\";\r\n\r\nconst SwitchFilter: React.FC<SwitchFilterProps> = ({ icon, title, type }) => {\r\n  return (\r\n    <div className=\"switch-filter\">\r\n      <Switch type={type} />\r\n      <img src={icon} alt={`${type} icon`} className=\"switch-filter__icon\" />\r\n      <p className=\"switch-filter__info\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SwitchFilter;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ObjectContext } from \"../../../../contexts/ObjectsContext\";\r\nimport \"./RangeFilter.scss\";\r\n\r\nconst RangeFilter: React.FC = () => {\r\n  const [batteryLevel, setBatteryLevel] = useState<number>(0);\r\n  const { filterByBatteryLevel } = useContext(ObjectContext);\r\n\r\n  useEffect(() => {\r\n    filterByBatteryLevel!(batteryLevel);\r\n  }, [batteryLevel]);\r\n\r\n  const handleRangeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setBatteryLevel(+e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"range-filter\">\r\n      <p className=\"range-filter__info\">min: {batteryLevel}%</p>\r\n      <input\r\n        type=\"range\"\r\n        className=\"slider\"\r\n        value={batteryLevel}\r\n        step=\"10\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        onChange={e => handleRangeChange(e)}\r\n      ></input>\r\n      <p className=\"range-filter__info\">Poziom baterii</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeFilter;\r\n","import React, { useState } from \"react\";\r\nimport settingsImg from \"../../imgs/settings-white.svg\";\r\nimport availableImg from \"../../imgs/car-round_available-3.svg\";\r\nimport unavailableImg from \"../../imgs/car-round_unavailable-3.svg\";\r\nimport \"./Toolbar.scss\";\r\nimport SwitchFilter from \"./Filters/SwitchFilter/SwitchFilter\";\r\nimport RangeFilter from \"./Filters/RangeFilter/RangeFilter\";\r\n\r\nconst Toolbar: React.FC = () => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n\r\n  return (\r\n    <div className={isOpen ? \"toolbar open\" : \"toolbar\"}>\r\n      <div className=\"settings\">\r\n        <button className=\"settings__btn\" onClick={() => setIsOpen(!isOpen)}>\r\n          <img\r\n            className=\"settings__icon\"\r\n            src={settingsImg}\r\n            alt=\"settings icon\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <div className=\"filters\">\r\n        <SwitchFilter\r\n          icon={availableImg}\r\n          title=\"Pojazdy dostępne\"\r\n          type={\"AVAILABLE\"}\r\n        />\r\n        <SwitchFilter\r\n          icon={unavailableImg}\r\n          title=\"Pojazdy niedostępne\"\r\n          type={\"UNAVAILABLE\"}\r\n        />\r\n        <RangeFilter />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\nimport MapElement from \"./components/Map/MapElement\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport ObjectContextProvider from \"./contexts/ObjectsContext\";\n\nconst App: React.FC = () => {\n  return (\n    <ObjectContextProvider>\n      <MapElement />\n      <Toolbar />\n    </ObjectContextProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}